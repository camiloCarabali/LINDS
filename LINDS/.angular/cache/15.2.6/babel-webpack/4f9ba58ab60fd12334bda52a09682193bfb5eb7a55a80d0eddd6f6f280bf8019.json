{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MostrarSucursalComponent = class MostrarSucursalComponent {\n  constructor(service) {\n    this.service = service;\n    this.sucursalList = [];\n  }\n  ngOnInit() {\n    this.refreshSucursalList();\n  }\n  refreshSucursalList() {\n    this.service.getSucursalList().subscribe(data => {\n      this.sucursalList = data;\n    });\n  }\n};\nMostrarSucursalComponent = __decorate([Component({\n  selector: 'app-mostrar-sucursal',\n  templateUrl: './mostrar-sucursal.component.html',\n  styleUrls: ['./mostrar-sucursal.component.scss']\n})], MostrarSucursalComponent);\nexport { MostrarSucursalComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAEnCC,YAAoBC,OAAsB;IAAtB,YAAO,GAAPA,OAAO;IAE3B,iBAAY,GAAQ,EAAE;EAFwB;EAI9CC,QAAQ;IACN,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EAEAA,mBAAmB;IACjB,IAAI,CAACF,OAAO,CAACG,eAAe,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAChD,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC1B,CAAC,CAAC;EACJ;CAED;AAhBYP,wBAAwB,eALpCD,SAAS,CAAC;EACTU,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACWX,wBAAwB,CAgBpC;SAhBYA,wBAAwB","names":["Component","MostrarSucursalComponent","constructor","service","ngOnInit","refreshSucursalList","getSucursalList","subscribe","data","sucursalList","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\camil\\OneDrive\\Documentos\\GitHub\\LINDS\\LINDS\\src\\app\\sucursal\\mostrar-sucursal\\mostrar-sucursal.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/services/shared.service';\n\n@Component({\n  selector: 'app-mostrar-sucursal',\n  templateUrl: './mostrar-sucursal.component.html',\n  styleUrls: ['./mostrar-sucursal.component.scss'],\n})\nexport class MostrarSucursalComponent  implements OnInit {\n\n  constructor(private service: SharedService) { }\n\n  sucursalList: any = [];\n\n  ngOnInit() {\n    this.refreshSucursalList();\n  }\n\n  refreshSucursalList() {\n    this.service.getSucursalList().subscribe((data) => {\n      this.sucursalList = data;\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}