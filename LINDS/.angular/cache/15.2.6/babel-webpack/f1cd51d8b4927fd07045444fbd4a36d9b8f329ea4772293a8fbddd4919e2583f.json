{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/shared.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nfunction MostrarSucursalComponent_ion_col_12_ion_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 8)(1, \"ion-card-header\")(2, \"ion-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-card-content\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-card-content\");\n    i0.ɵɵelement(11, \"ion-icon\", 9)(12, \"ion-icon\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const empresa_r3 = ctx.$implicit;\n    const dataItem_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dataItem_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(empresa_r3.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", dataItem_r1.direccion, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", dataItem_r1.municipio, \" \");\n  }\n}\nfunction MostrarSucursalComponent_ion_col_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 6);\n    i0.ɵɵtemplate(1, MostrarSucursalComponent_ion_col_12_ion_card_1_Template, 13, 4, \"ion-card\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.nombreEmpresas);\n  }\n}\nexport class MostrarSucursalComponent {\n  constructor(service) {\n    this.service = service;\n    this.sucursalList = [];\n    this.nombreEmpresas = [];\n  }\n  ngOnInit() {\n    this.refreshSucursalList();\n    console.log(this.nombreEmpresas);\n  }\n  refreshSucursalList() {\n    this.service.getSucursalList().subscribe(data => {\n      this.sucursalList = data;\n      for (let i = 0; i < data.length; i++) {\n        this.buscarEmpresa(data[i].empresa);\n      }\n    });\n  }\n  buscarEmpresa(nit) {\n    this.service.getBuscarEmpresa(nit).subscribe(data => {\n      this.nombreEmpresas.push(data);\n    });\n  }\n}\nMostrarSucursalComponent.ɵfac = function MostrarSucursalComponent_Factory(t) {\n  return new (t || MostrarSucursalComponent)(i0.ɵɵdirectiveInject(i1.SharedService));\n};\nMostrarSucursalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MostrarSucursalComponent,\n  selectors: [[\"app-mostrar-sucursal\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [\"id\", \"container\"], [\"size\", \"3\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"3\"], [\"color\", \"primary\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\"], [\"name\", \"create\"], [\"name\", \"close-circle\"]],\n  template: function MostrarSucursalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \" Sucursal \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Sucursal\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"ion-grid\")(11, \"ion-row\");\n      i0.ɵɵtemplate(12, MostrarSucursalComponent_ion_col_12_Template, 2, 1, \"ion-col\", 5);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.sucursalList);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.IonCard, i3.IonCardContent, i3.IonCardHeader, i3.IonCardSubtitle, i3.IonCardTitle, i3.IonCol, i3.IonContent, i3.IonGrid, i3.IonHeader, i3.IonIcon, i3.IonRow, i3.IonTitle, i3.IonToolbar],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAmBUA,mCAAiE;IAE7CA,YAAmB;IAAAA,iBAAiB;IACpDA,yCAAmB;IAAAA,YAAkB;IAAAA,iBAAoB;IAE3DA,wCAAkB;IAChBA,YAAsB;IAAAA,qBAAI;IAC1BA,YACF;IAAAA,iBAAmB;IACnBA,yCAAkB;IAChBA,+BAAmC;IAErCA,iBAAmB;;;;;IAVDA,eAAmB;IAAnBA,wCAAmB;IAChBA,eAAkB;IAAlBA,uCAAkB;IAGrCA,eAAsB;IAAtBA,qDAAsB;IACtBA,eACF;IADEA,sDACF;;;;;IATJA,kCAAwD;IACtDA,+FAaW;IACbA,iBAAU;;;;IAdsCA,eAAiB;IAAjBA,+CAAiB;;;ACVzE,OAAM,MAAOC,wBAAwB;EACnCC,YAAoBC,OAAsB;IAAtB,YAAO,GAAPA,OAAO;IAE3B,iBAAY,GAAQ,EAAE;IACtB,mBAAc,GAAQ,EAAE;EAHqB;EAK7CC,QAAQ;IACN,IAAI,CAACC,mBAAmB,EAAE;IAC1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,cAAc,CAAC;EAClC;EAEAH,mBAAmB;IACjB,IAAI,CAACF,OAAO,CAACM,eAAe,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAI;MAChD,IAAI,CAACC,YAAY,GAAGD,IAAI;MACxB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACpC,IAAI,CAACE,aAAa,CAACJ,IAAI,CAACE,CAAC,CAAC,CAACG,OAAO,CAAC;;IAEvC,CAAC,CAAC;EACJ;EAEAD,aAAa,CAACE,GAAQ;IACpB,IAAI,CAACd,OAAO,CAACe,gBAAgB,CAACD,GAAG,CAAC,CAACP,SAAS,CAAEC,IAAI,IAAI;MACpD,IAAI,CAACH,cAAc,CAACW,IAAI,CAACR,IAAI,CAAC;IAChC,CAAC,CAAC;EACF;;AAxBSV,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTrCxB,qCAAiC;MAG3BA,0BACF;MAAAA,iBAAY;MAIhBA,sCAAiC;MAGHA,wBAAQ;MAAAA,iBAAY;MAIhDA,8BAAqB;MAGfA,mFAeU;MACZA,iBAAU;;;MAlCJA,kCAAoB;MAQnBA,eAAmB;MAAnBA,iCAAmB;MAUeA,eAAe;MAAfA,0CAAe","names":["i0","MostrarSucursalComponent","constructor","service","ngOnInit","refreshSucursalList","console","log","nombreEmpresas","getSucursalList","subscribe","data","sucursalList","i","length","buscarEmpresa","empresa","nit","getBuscarEmpresa","push","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\camil\\OneDrive\\Documentos\\GitHub\\LINDS\\LINDS\\src\\app\\sucursal\\mostrar-sucursal\\mostrar-sucursal.component.html","C:\\Users\\camil\\OneDrive\\Documentos\\GitHub\\LINDS\\LINDS\\src\\app\\sucursal\\mostrar-sucursal\\mostrar-sucursal.component.ts"],"sourcesContent":["<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>\n      Sucursal\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Sucursal</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <div id=\"container\" >\n    <ion-grid>\n      <ion-row>\n        <ion-col size=\"3\" *ngFor=\"let dataItem of sucursalList\">\n          <ion-card color=\"primary\" *ngFor=\"let empresa of nombreEmpresas\">\n            <ion-card-header>\n              <ion-card-title>{{dataItem.nombre}}</ion-card-title>\n              <ion-card-subtitle>{{empresa.nombre}}</ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              {{dataItem.direccion}}<br>\n              {{dataItem.municipio}}\n            </ion-card-content>\n            <ion-card-content>\n              <ion-icon name=\"create\"></ion-icon>\n              <ion-icon name=\"close-circle\"></ion-icon>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </div>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/services/shared.service';\nimport { CLIENT_RENEG_LIMIT } from 'tls';\n\n@Component({\n  selector: 'app-mostrar-sucursal',\n  templateUrl: './mostrar-sucursal.component.html',\n  styleUrls: ['./mostrar-sucursal.component.scss'],\n})\nexport class MostrarSucursalComponent implements OnInit {\n  constructor(private service: SharedService) {}\n\n  sucursalList: any = [];\n  nombreEmpresas: any = [];\n\n  ngOnInit() {\n    this.refreshSucursalList();\n    console.log(this.nombreEmpresas)\n  }\n\n  refreshSucursalList() {\n    this.service.getSucursalList().subscribe((data) => {\n      this.sucursalList = data;\n      for (let i = 0; i < data.length; i++) {\n        this.buscarEmpresa(data[i].empresa)\n      }\n    });\n  }\n\n  buscarEmpresa(nit: any) {\n    this.service.getBuscarEmpresa(nit).subscribe((data) => {\n      this.nombreEmpresas.push(data);\n    });\n    }\n  }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}